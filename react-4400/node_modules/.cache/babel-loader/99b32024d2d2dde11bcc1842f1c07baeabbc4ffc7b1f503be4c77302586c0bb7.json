{"ast":null,"code":"var _jsxFileName = \"/Users/joshuageorge/Desktop/4400-IV/react-4400/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [procedure, setProcedure] = useState('');\n  const [args, setArgs] = useState('');\n  const [view, setView] = useState('');\n  const [viewData, setViewData] = useState([]);\n  const callProcedure = async () => {\n    try {\n      const response = await axios.post(`/api/procedure/${procedure}`, {\n        args: args.split(',').map(a => a.trim())\n      });\n      alert('Procedure executed successfully');\n    } catch (e) {\n      alert('Failed to execute procedure');\n    }\n  };\n  const fetchView = async () => {\n    try {\n      const res = await axios.get(`/api/view/${view.trim()}`);\n      setViewData(res.data);\n    } catch (e) {\n      alert('Failed to load view');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airline Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Call Stored Procedure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Procedure Name\",\n      value: procedure,\n      onChange: e => setProcedure(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Args (comma separated)\",\n      value: args,\n      onChange: e => setArgs(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: callProcedure,\n      children: \"Execute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"View Name\",\n      value: view,\n      onChange: e => setView(e.target.value.trimStart()) // prevent leading spaces as user types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchView,\n      children: \"Load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(viewData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KZOM+X5FqPqMts6xDfyXKpcJBLM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","procedure","setProcedure","args","setArgs","view","setView","viewData","setViewData","callProcedure","response","post","split","map","a","trim","alert","e","fetchView","res","get","data","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","trimStart","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/joshuageorge/Desktop/4400-IV/react-4400/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [procedure, setProcedure] = useState('');\n  const [args, setArgs] = useState('');\n  const [view, setView] = useState('');\n  const [viewData, setViewData] = useState([]);\n\n  const callProcedure = async () => {\n    try {\n      const response = await axios.post(`/api/procedure/${procedure}`, {\n        args: args.split(',').map(a => a.trim())\n      });      \n      alert('Procedure executed successfully');\n    } catch (e) {\n      alert('Failed to execute procedure');\n    }\n  };\n\n  const fetchView = async () => {\n    try {\n     const res = await axios.get(`/api/view/${view.trim()}`);\n      setViewData(res.data);\n    } catch (e) {\n      alert('Failed to load view');\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Airline Management System</h1>\n\n      <h2>Call Stored Procedure</h2>\n      <input placeholder=\"Procedure Name\" value={procedure} onChange={e => setProcedure(e.target.value)} />\n      <input placeholder=\"Args (comma separated)\" value={args} onChange={e => setArgs(e.target.value)} />\n      <button onClick={callProcedure}>Execute</button>\n\n      <h2>View Data</h2>\n      <input\n  placeholder=\"View Name\"\n  value={view}\n  onChange={e => setView(e.target.value.trimStart())}  // prevent leading spaces as user types\n/>      <button onClick={fetchView}>Load</button>\n\n      <pre>{JSON.stringify(viewData, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}